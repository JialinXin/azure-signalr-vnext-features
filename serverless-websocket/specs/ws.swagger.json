{
  "openapi": "3.0.1",
  "info": {
    "title": "Azure SignalR Serverless WebSocket",
    "version": "v1"
  },
  "paths": {
    "/api/v1/health": {
      "get": {
        "tags": [
          "HealthApi"
        ],
        "summary": "Check the health of the service",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResultValueTask"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResultValueTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResultValueTask"
                }
              }
            }
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}": {
      "post": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Broadcast content inside request body to all the connected connection in the same hub",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "description": "The hub is the logic isolation for connections",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/users/{id}": {
      "post": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Send content inside request body to the specific user",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The user identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/connections/{connectionId}": {
      "post": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Send content inside request body to the specific connection",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Close the client connection",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/groups/{group}": {
      "post": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Send content inside request body to a group of connections",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/groups/{group}/users/{user}": {
      "get": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Check if the user is in the specified group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Add the user to the specified group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "description": "Specifies the seconds that the user exists in the group. If not set, the user lives in the group forever.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Remove all the connections belong to the specified user from the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/users/{user}/groups/{group}": {
      "get": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Check if the user is in the specified group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Add the user to the specified group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "description": "Specifies the seconds that the user exists in the group. If not set, the user lives in the group forever.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Remove all the connections belong to the specified user from the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/groups/{group}/connections/{connectionId}": {
      "put": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Add the connection to the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Remove the connection from the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/connections/{connectionId}/groups/{group}": {
      "put": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Add the connection to the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Remove the connection from the group",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ws/api/v1/hubs/{hub}/users/{user}/groups": {
      "delete": {
        "tags": [
          "WebSocketConnectionApi"
        ],
        "summary": "Remove the user from all groups",
        "parameters": [
          {
            "name": "hub",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "IActionResultValueTask": {
        "type": "object",
        "properties": {
          "IsCompleted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCompletedSuccessfully": {
            "type": "boolean",
            "readOnly": true
          },
          "IsFaulted": {
            "type": "boolean",
            "readOnly": true
          },
          "IsCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "Result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IActionResult"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}